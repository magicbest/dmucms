<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
	version="3.1">
	<display-name>dmucms</display-name>
	
	
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	
<!-- 该过滤器负责用户的认证工作，必须启用它 -->  
 <filter>  
       <filter-name>CASFilter</filter-name>  
        <filter-class>org.jasig.cas.client.authentication.AuthenticationFilter</filter-class>  
        <init-param>  
               <param-name>casServerLoginUrl</param-name>  
                <param-value>https://my.dlmu.edu.cn/cas/login</param-value>  
                 <!--这里的server是服务端的IP-->  
        </init-param>  
       <init-param>  
               <param-name>serverName</param-name>  
                <param-value>http://127.0.0.1:8080</param-value>  
        </init-param>  
</filter>  
 <filter-mapping>  
         <filter-name>CASFilter</filter-name>  
        <url-pattern>/*</url-pattern>  
 </filter-mapping>  
   
 <!-- 该过滤器负责对Ticket的校验工作，必须启用它 -->  
 <filter>  
         <filter-name>CAS Validation Filter</filter-name>  
                 <filter-class>  
                org.jasig.cas.client.validation.Cas20ProxyReceivingTicketValidationFilter</filter-class>  
       <init-param>  
              <param-name>casServerUrlPrefix</param-name>  
                <param-value>https://my.dlmu.edu.cn/cas/</param-value>  
       </init-param>  
      <init-param>  
                <param-name>serverName</param-name>  
               <param-value>http://127.0.0.1:8080</param-value>  
        </init-param>  
</filter>  
<filter-mapping>  
         <filter-name>CAS Validation Filter</filter-name>  
         <url-pattern>/*</url-pattern>  
 </filter-mapping>  
   
 <!--  
        该过滤器负责实现HttpServletRequest请求的包裹，   比如允许开发者通过HttpServletRequest的getRemoteUser()方法获得SSO登录用户的登录名，可选配置。  
 -->  
 <filter>  
         <filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>  
         <filter-class>  
                 org.jasig.cas.client.util.HttpServletRequestWrapperFilter</filter-class>  
</filter>  
<filter-mapping>  
         <filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>  
         <url-pattern>/*</url-pattern>  
 </filter-mapping>  
  
<filter>  
        <filter-name>CAS Assertion Thread Local Filter</filter-name>  
        <filter-class>org.jasig.cas.client.util.AssertionThreadLocalFilter</filter-class>  
</filter>  
<filter-mapping>  
        <filter-name>CAS Assertion Thread Local Filter</filter-name>  
        <url-pattern>/*</url-pattern>  
</filter-mapping>


	<!-- 加载Spring容器配置 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- 设置Spring容器加载配置文件路径 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext-common.xml</param-value>
	</context-param>

	<!--配置Springmvc核心控制器 -->
	<servlet>
		<servlet-name>spmvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spmvc-servlet.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<!--为DispatcherServlet建立映射 -->
	<servlet-mapping>
		<servlet-name>spmvc</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	<!-- 解决工程编码过滤器 -->
	
	
	<!-- 在spingmvc 中使用httpservlet -->
	<listener>
        <listener-class>
            org.springframework.web.context.request.RequestContextListener
        </listener-class>
    </listener>
    
    
     <!-- ckfinder开始 -->
     <servlet>  
         <servlet-name>ConnectorServlet</servlet-name>  
         <servlet-class>com.ckfinder.connector.ConnectorServlet</servlet-class>  
         <init-param>  
             <param-name>XMLConfig</param-name>  
             <param-value>/WEB-INF/config.xml</param-value>  
         </init-param>  
         <init-param>  
             <param-name>debug</param-name>  
             <param-value>false</param-value>  
         </init-param>  
         <load-on-startup>2</load-on-startup>  
     </servlet>
  <servlet-mapping>  
        <servlet-name>ConnectorServlet</servlet-name>  
        <url-pattern>  
            /ckfinder/core/connector/java/connector.java  
        </url-pattern>  
    </servlet-mapping> 
    
    
      <!-- spring logback -->
	<context-param>
		<param-name>logbackConfigLocation</param-name>
		<param-value>WEB-INF/logback.xml</param-value>
	</context-param>  
	<listener>
		<listener-class>com.safewind.dmucms.util.LogbackConfigListener</listener-class>
	</listener>
    

	<welcome-file-list>
		<welcome-file>/WEB-INF/login.jsp</welcome-file>
	</welcome-file-list>
	
</web-app>